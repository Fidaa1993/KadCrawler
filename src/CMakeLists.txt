set(KAD_SRCS KadCrawler.cpp KadCrawleManager.cpp AsioUDPServer.cpp KadNode.cpp
    KadScanner.cpp OtherFunctions.cpp Packet.cpp RoutingBin.cpp
    RoutingZone.cpp SafeMemFile.cpp UInt128.cpp DatabaseLogger.cpp
    GnutellaScanner.cpp AsioTCPServer.cpp FileClientSession.cpp
    KadClientCredits.cpp KadFileDownloader.cpp KadUtil.cpp KadAnalyzer.cpp
    KadSharedFile.cpp KadLogger.cpp QQIpInfo.cpp)
set (Boost_USE_STATIC_LIBS ON)
set (BOOST_USE_MULTITHREADED ON)
set (BOOST_USE_STATIC_RUNTIME ON)

add_executable(KadCrawler ${KAD_SRCS})
find_package(Boost COMPONENTS date_time filesystem system thread regex
    program_options serialization REQUIRED)
if(Boost_Found)
	include_directories(${Boost_INCLUDE_DIRS})
	target_link_libraries (KadCrawler ${Boost_LIBRARIES})
endif()

find_package(ZLIB)
if(ZLIB_FOUND)
	target_link_libraries (KadCrawler ${ZLIB_LIBRARY})
endif()
find_package (Threads REQUIRED)
target_link_libraries(KadCrawler ${CMAKE_THREAD_LIBS_INIT})
find_library(CRYPTOPP_LIB cryptopp)
if(CRYPTOPP_LIB)
target_link_libraries(KadCrawler ${CRYPTOPP_LIB})
endif()
find_library(BOOST_SYSTEM_LIB boost_system)
if(BOOST_SYSTEM_LIB)
target_link_libraries (KadCrawler ${BOOST_SYSTEM_LIB})
endif() 
find_library(BOOST_DATE_TIME_LIB boost_date_time)
if(BOOST_DATE_TIME_LIB)
    target_link_libraries (KadCrawler ${BOOST_DATE_TIME_LIB})
endif() 
find_library(BOOST_THREAD_LIB boost_thread)
if(BOOST_THREAD_LIB)
target_link_libraries (KadCrawler ${BOOST_THREAD_LIB})
endif()
find_library(BOOST_PROGRAM_OPTIONS_LIB boost_program_options)
if(BOOST_PROGRAM_OPTIONS)
MESSAGE(STATUS "Found BOOST_PROGRAM_OPTIONS_LIB")
target_link_libraries (KadCrawler ${BOOST_PROGRAM_OPTIONS_LIB})
endif()
find_library(BOOST_REGEX_LIB boost_regex)
if(BOOST_REGEX_LIB)
MESSAGE(STATUS "Found BOOST_REGEX_LIB")
target_link_libraries (KadCrawler ${BOOST_REGEX_LIB})
endif()
find_library(BOOST_FILESYSTEM_LIB boost_filesystem)
if(BOOST_FILESYSTEM_LIB)
MESSAGE(STATUS "Found BOOST_FILESYSTEM_LIB")
target_link_libraries (KadCrawler ${BOOST_FILESYSTEM_LIB})
endif()
find_library(BOOST_SERIALIZATION_LIB boost_serialization)
if(BOOST_SERIALIZATION_LIB)
MESSAGE(STATUS "Found BOOST_SERIALIZATION_LIB")
target_link_libraries (KadCrawler ${BOOST_SERIALIZATION_LIB})
endif()
find_library(SQLITE3_LIB sqlite3)
if(SQLITE3_LIB)
MESSAGE(STATUS "Found Sqlite3 lib")
target_link_libraries (KadCrawler ${SQLITE3_LIB})
endif()
find_library(GEOIP_LIB GeoIP)
if(GEOIP_LIB)
MESSAGE(STATUS "Found GeoIP lib")
target_link_libraries (KadCrawler ${GEOIP_LIB})
endif()
target_link_libraries (KadCrawler ${Boost_PROGRAM_OPTIONS_LIBRARY})
SET_TARGET_PROPERTIES(KadCrawler PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")
